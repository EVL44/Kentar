// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  username        String       @unique
  password        String
  email           String       @unique
  avatarUrl       String?
  favoriteIds     String[]     @db.ObjectId
  watchlistIds    String[]     @db.ObjectId
  favorites       Movie[]      @relation("Favorites", fields: [favoriteIds], references: [id])
  watchlist       Movie[]      @relation("Watchlist", fields: [watchlistIds], references: [id])
  movieLists      MovieList[]
}

model Movie {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  tmdbId             Int          @unique
  title              String
  posterPath         String?
  releaseDate        String?
  favoritedByIds     String[]     @db.ObjectId
  watchlistedByIds   String[]     @db.ObjectId
  favoritedBy        User[]       @relation("Favorites", fields: [favoritedByIds], references: [id])
  watchlistedBy      User[]       @relation("Watchlist", fields: [watchlistedByIds], references: [id])
  lists              MovieList[]  @relation(fields: [listIds], references: [id])
  listIds            String[]     @db.ObjectId
}

model MovieList {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  movies    Movie[]  @relation(fields: [movieIds], references: [id])
  movieIds  String[] @db.ObjectId
}